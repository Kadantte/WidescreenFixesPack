// Line with this "//" are comments. They are not used by the game
// Something like this [Toto] is called a section. All variables of a section must be grouped together. No empty line
// can separate a section's variables. If a variable is not specified, it will be 0.


//  Registration of the valid action schemes
[Echelon.ActionSchemeFactory]
m_aSchemes=SPNormalAction
m_aSchemes=SPGroundIdleAction
m_aSchemes=SPHumanShieldAction
m_aSchemes=SPCrouchAction
m_aSchemes=SPSlideAction
m_aSchemes=SPFallAction
m_aSchemes=SPGeoNavAction
m_aSchemes=SPInterrogateAction
m_aSchemes=SPSnakeCamAction
m_aSchemes=SPExtInventoryAction
m_aSchemes=SPStickyCamAction
m_aSchemes=MPCoopDownedAction
m_aSchemes=MPCoopChokedAction
m_aSchemes=SPFilmingCamAction
m_aSchemes=SPTurretCamAction
m_aSchemes=SPStopOnGap
m_aSchemes=SPCosteNormalAction
m_aSchemes=SPCosteCrouchAction
m_aSchemes=SPGunpointAction
m_aSchemes=SPCustomInteractionAction
m_aSchemes=SPSeqControlledAction
m_aSchemes=SPDeadAction

 

[EchelonPlayer.ActionScheme]
m_Alias=(Filter=epfNormal,		Flag=0x00000001)
m_Alias=(Filter=epfDoubleTap,	Flag=0x00000002)
m_Alias=(Filter=epfExecute,		Flag=0x00000004)
m_Alias=(Filter=epfGeoNav,		Flag=0x0000000C)
m_Alias=(Filter=epfHideTrans,	Flag=0x00000010)
m_Alias=(Filter=epfTransition,	Flag=0x00000020)
m_Alias=(Filter=epfNone,		Flag=0x10000000)
m_Alias=(Filter=epfCritical,	Flag=0x10000000)
m_Alias=(Filter=epfAll,			Flag=0xFFFFFFFF)

m_eSchemeMode=eSchemeDebugMode_Default
m_eVisualInteractionAction=eActionType_PressA

//  Normal action scheme for the single player maps
[EchelonPlayer.SPNormalAction]

//execute hand 2 hand
m_Action=(Name=PrepareAttackState,StateCommand=Execute,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
// [EchelonPlayer.SPNormalAction] -Execute-
m_Action=(Name=MarkAndExecWeaponUtilityState,StateCommand=Drop,Action=eActionType_Execute,TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecWeaponUtilityState,StateCommand=Equip,Action=eActionType_Execute,TargetType=TTYPE_None)
m_Action=(Name=CoverMarkAndExecReloadState,StateCommand=FromPeekShoot,Action=eActionType_Execute,TargetType=TTYPE_None)
m_Action=(Name=CoverMarkAndExecReloadState,StateCommand=FromCoverShoot,Action=eActionType_Execute,TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecReloadState,Action=eActionType_Execute,TargetType=TTYPE_None)

//execute from cover
m_Action=(Name=CoverShootToTargetState,StateCommand=AttackingPawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//m_Action=(Name=CoverShootToTargetState,StateCommand=Light,Action=eActionType_Execute,TargetType=TTYPE_Light)
m_Action=(Name=CoverShootToTargetState,StateCommand=Trap,Action=eActionType_Execute,TargetType=TTYPE_Trap)
m_Action=(Name=CoverShootToTargetState,StateCommand=Grenade,Action=eActionType_Execute,TargetType=TTYPE_Inventoriable)
m_Action=(Name=CoverShootToTargetState,StateCommand=Explosive,Action=eActionType_Execute,TargetType=TTYPE_Explosive)
m_Action=(Name=CoverShootToTargetState,StateCommand=Pawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)

//M&E Realization FROM HERE...
m_Action=(Name=MarkExecutionIdleState,StateCommand=AttackingPawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//m_Action=(Name=MarkExecutionIdleState,StateCommand=Light,Action=eActionType_Execute,TargetType=TTYPE_Light)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Trap,Action=eActionType_Execute,TargetType=TTYPE_Trap)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Grenade,Action=eActionType_Execute,TargetType=TTYPE_Inventoriable)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Explosive,Action=eActionType_Execute,TargetType=TTYPE_Explosive)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Pawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//... TO HERE

m_Action=(Name=MarkExecutionState,StateCommand=AttackingPawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//m_Action=(Name=MarkExecutionState,StateCommand=Light,Action=eActionType_Execute,TargetType=TTYPE_Light)
m_Action=(Name=MarkExecutionState,StateCommand=Trap,Action=eActionType_Execute,TargetType=TTYPE_Trap)
m_Action=(Name=MarkExecutionState,StateCommand=Grenade,Action=eActionType_Execute,TargetType=TTYPE_Inventoriable)
m_Action=(Name=MarkExecutionState,StateCommand=Explosive,Action=eActionType_Execute,TargetType=TTYPE_Explosive)
m_Action=(Name=MarkExecutionState,StateCommand=Pawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)

// [EchelonPlayer.SPNormalAction] -A-
m_Action=(GameMode=eGameMode_MPOnly, Event=StopRevive, Action=eActionType_ReleaseA, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopReviveState, Action=eActionType_PressA, TargetType=TTYPE_Player)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopBoostedByPartnerState, Action=eActionType_PressA, TargetType=TTYPE_Player)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopBoostPartnerState, Action=eActionType_PressA, TargetType=TTYPE_GeoSpecialCase)
m_Action=(GameMode=eGameMode_MPOnly, Name=ThrowIRStrobeState,Action=eActionType_PressA, TargetType=TTYPE_None)
m_Action=(Name=UseWeaponStashState,Action=eActionType_PressA, TargetType=TTYPE_None )
m_Action=(Event=StackedAction,Action=eActionType_PressA,Filter=epfCritical)
m_Action=(Name=AreaPortalMoveState,Action=eActionType_PressA,TargetType=TTYPE_Portal)
m_Action=(Name=GeoVertPipeNavStartState,Action=eActionType_PressA,TargetType=TTYPE_VPipe)
m_Action=(Name=GeoVertPipeJumpState,Action=eActionType_PressA,TargetType=TTYPE_VPipe)
m_Action=(Name=GeoLedgeJumpState,Action=eActionType_PressA,TargetType=TTYPE_Ledge)
m_Action=(Name=GeoLedgeJumpState,Action=eActionType_PressA,TargetType=TTYPE_Railing)
m_Action=(Name=GeoLedgeJumpState,Action=eActionType_PressA,TargetType=TTYPE_GeoSpecialCase)
m_Action=(Name=CoverToCoverMkIIState,Action=eActionType_PressA,TargetType=TTYPE_None)
m_Action=(Name=Geo1uJumpState,Action=eActionType_PressA,TargetType=TTYPE_JumpOver)
m_Action=(Name=GeoHorPipeJumpState,Action=eActionType_PressA,TargetType=TTYPE_HPipe)
m_Action=(Name=GeoRailingJumpState,Action=eActionType_PressA,TargetType=TTYPE_Railing)
//m_Action=(Name=GeoHorPipe4ULateralJumpState,Action=eActionType_PressA,TargetType=TTYPE_None)
m_Action=(Name=GeoDropToLedgeState,Action=eActionType_PressB,TargetType=TTYPE_Ledge)
m_Action=(Name=GenericJumpState,Action=eActionType_PressA,TargetType=TTYPE_None)
m_Action=(Event=Sprint,Action=eActionType_HoldA,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=SprintOff,Action=eActionType_ReleaseA,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=CrouchSprintOff,Action=eActionType_ReleaseA,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPNormalAction] -Visual Interaction-
m_Action=(Name=CustomInteractionState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=CustomInteractionState,Action=eActionType_VisualInteraction,StateCommand=NPC, TargetType=TTYPE_Enemy ) //lpdallaire: the state command is there to prevent state pool bugs
m_Action=(Name=ExternalInventoryState,Action=eActionType_VisualInteraction, TargetType=TTYPE_None )
m_Action=(Name=SnakeCamState,StateCommand=On,Action=eActionType_VisualInteraction,TargetType=TTYPE_EntryWay)
m_Action=(Name=UseDoorState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseDoorState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualDoorBreachState, StateCommand=Confirm, Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualDoorBreachState, StateCommand=Propose, Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseWindowState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseWindowState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseSwitchState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=PickUpState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Inventoriable )
m_Action=(Name=CoopHackingState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=CoopPlantC4State,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=UseWeaponStashState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=CoopTurretState,Action=eActionType_VisualInteraction,TargetType=TTYPE_Switch)

// [EchelonPlayer.SPNormalAction] -X-
// scripted scenes require PrepareAttackState PreInterrogateState PreInterrogateFailedState ExoticInterrogationState to be eActionType_PressB
m_Action=(Name=ExoticInterrogationState,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=ExoticInterrogationState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateFailedState,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateFailedState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateState,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=AttackDoorState,StateCommand=DirectionalTarget,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=PrepareAttackState,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=PrepareAttackState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=AttackDoorState,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=StartCarAlarmState,Action=eActionType_PressX, TargetType=TTYPE_Car )

// [EchelonPlayer.SPNormalAction] -LeftShoulder-
m_Action=(Name=UseStickyCamState,StateCommand=Normal,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=CoverThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=ThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=UsePortableEMPState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=UseMineDetonatorState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)

// [EchelonPlayer.SPNormalAction] -Y-
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOn, Action=eActionType_PressY, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualExecutionState, StateCommand=Confirm, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=OrderExecutionState,	Action=eActionType_PressY, Filter=epfCritical)
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOff, Action=eActionType_ReleaseY, Filter=epfCritical)

// [EchelonPlayer.SPNormalAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,	Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,	Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,	StateCommand=ReleaseMark,	Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical)

// [EchelonPlayer.SPNormalAction] -B-
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical)
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical)
m_Action=(Event=StackedDrop,Action=eActionType_PressB,Filter=epfCritical)
m_Action=(Name=GeoDropToLedgeState,StateCommand=SlideDrop,Action=eActionType_PressB,TargetType=TTYPE_Ledge )
m_Action=(Name=CoverNavStartState,StateCommand=InstantCheck,Action=eActionType_PressB, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_HoldB, TargetType=TTYPE_None )
m_Action=(Name=SlideOnGroundState,Action=eActionType_PressB, TargetType=TTYPE_None )
m_Action=(Name=RollState,Action=eActionType_HoldB,TargetType=TTYPE_None)

// [EchelonPlayer.SPNormalAction] -RightAnalog-
m_Action=(Name=ReloadFireWeaponState,Action=eActionType_PressRightAnalog)
m_Action=(Name=WeaponUtilityState,StateCommand=DrawReload,Action=eActionType_PressRightAnalog)

// [EchelonPlayer.SPNormalAction] -LeftAnalog-
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)
m_Action=(Name=GeoDropToLedgeState,StateCommand=SlideDrop,Action=eActionType_PressB,TargetType=TTYPE_Ledge )
m_Action=(Name=SlideOnGroundState,StateCommand=Crouch,Action=eActionType_PressLeftAnalog, TargetType=TTYPE_None )

// [EchelonPlayer.SPNormalAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPNormalAction] -DPadLeft-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleLeft,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(Event=EndCycleInventoryLeftEvent,Action=eActionType_ReleaseDPadLeft, TargetType=TTYPE_None, Filter=epfCritical)

// [EchelonPlayer.SPNormalAction] -DPadRight-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleRight,Action=eActionType_PressDPadRight, Filter=epfCritical)
m_Action=(Event=EndCycleInventoryRightEvent,Action=eActionType_ReleaseDPadRight, Filter=epfCritical)

// [EchelonPlayer.SPNormalAction] -DPadDown-
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPNormalAction] -DPadUp-
m_Action=(Name=UseSonarGogglesState, StateCommand=Normal,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState, StateCommand=ForceOff,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )


// [EchelonPlayer.SPNormalAction] -Tick-
m_Action=(Name=GeoLowDropState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState,StateCommand=Tick,Action=eActionType_Tick,iTickFrame=4, TargetType=TTYPE_None )
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=InstantAttachState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Drop,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=GenericFallState,StateCommand=AutoDetect,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical )
m_Action=(Name=ExecuteActionState,Action=eActionType_Tick,Filter=epfExecute, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Restore,Action=eActionType_Tick, TargetType=TTYPE_None )
//m_Action=(Name=UseEarPieceState,StateCommand=Sequencer,Action=eActionType_Tick,iTickFrame=4, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=IdleLayerState,Action=eActionType_Tick,iTickFrame=10, TargetType=TTYPE_None )
m_Action=(Name=StopOnGapState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=AutoReloadTimer,Action=eActionType_Tick, iTickFrame=4, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPNormalAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPNormalAction] -Right trigger
m_Action=(Event=ForceShoot,Action=eActionType_PressRightTrigger, Filter=epfCritical )
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=EmptyOnly,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None ) 


// [EchelonPlayer.SPNormalAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
m_Action=(Name=UseFilmingCameraState,Action=eActionType_PressBack,TargetType=TTYPE_None)
m_Action=(Name=UseRemoteTurretState,Action=eActionType_PressBack,TargetType=TTYPE_None)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPNormalAction] -PC Specific BEGIN -
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Name=WeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldAlternateWeapon, TargetType=TTYPE_None)

m_Action=(Name=InventoryUtilityState,StateCommand=SelectFragGrenade,Action=eActionType_PressFragGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectFlashBang,Action=eActionType_PressFlashBang, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectEMPGrenade,Action=eActionType_PressEMPGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteMine,Action=eActionType_PressRemoteMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectStickyCam,Action=eActionType_PressStickyCam, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectPortableEMP,Action=eActionType_PressPortableEMP, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectProximityMine,Action=eActionType_PressProximityMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteDetonator,Action=eActionType_PressRemoteDetonator, Filter=epfCritical)
// [EchelonPlayer.SPNormalAction] -PC Specific END -

//----------------------------------------------------------------------------------
//
//							HUMAN SHIELD
//
//----------------------------------------------------------------------------------
//  Player is moving using human shield action scheme
[EchelonPlayer.SPHumanShieldAction]

//  -Execute-
m_Action=(Name=MarkAndExecHSWeaponUtilityState,StateCommand=Drop,Action=eActionType_Execute, TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecHSWeaponUtilityState,StateCommand=Equip,Action=eActionType_Execute, TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecHSWeaponUtilityState,StateCommand=Reload,Action=eActionType_Execute, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldMarkExecutionState,StateCommand=AttackingPawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy)
//m_Action=(Name=HumanShieldMarkExecutionState,StateCommand=Light,Action=eActionType_Execute, TargetType=TTYPE_Light)
m_Action=(Name=HumanShieldMarkExecutionState,StateCommand=Trap,Action=eActionType_Execute, TargetType=TTYPE_Trap)
m_Action=(Name=HumanShieldMarkExecutionState,StateCommand=Grenade,Action=eActionType_Execute, TargetType=TTYPE_Inventoriable)
m_Action=(Name=HumanShieldMarkExecutionState,StateCommand=Explosive,Action=eActionType_Execute, TargetType=TTYPE_Explosive)
m_Action=(Name=HumanShieldMarkExecutionState,StateCommand=Pawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy)

// [EchelonPlayer.SPHumanShieldAction] -Vis. int.-
m_Action=(Name=CustomInteractionState,StateCommand=HumanShieldEnabled,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )

// [EchelonPlayer.SPHumanShieldAction] -A-
m_Action=(GameMode=eGameMode_MPOnly, Event=StopRevive, Action=eActionType_ReleaseA, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopReviveState, Action=eActionType_PressA, TargetType=TTYPE_Player)

// [EchelonPlayer.SPHumanShieldAction] -B-

// [EchelonPlayer.SPHumanShieldAction] -Y-
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOn, Action=eActionType_PressY, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualExecutionState, StateCommand=Confirm, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldOrderExecutionState,	Action=eActionType_PressY, Filter=epfCritical)
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOff, Action=eActionType_ReleaseY, Filter=epfCritical, TargetType=TTYPE_None)


// [EchelonPlayer.SPHumanShieldAction] -LeftAnalog-
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Reload,Action=eActionType_PressLeftAnalog)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=DrawReload,Action=eActionType_PressLeftAnalog)
// [EchelonPlayer.SPHumanShieldAction] -LeftShoulder-

// [EchelonPlayer.SPHumanShieldAction] -X-
m_Action=(Name=SmashDoorWithEnemyState,Action=eActionType_PressX,Filter=epfTransition, TargetType=TTYPE_EntryWay )
m_Action=(Event=KillEvent,Action=eActionType_ReleaseX,PrecedingAction=eActionType_SchemeAssigned,fMaxDelay=0.27,Filter=epfTransition)
m_Action=(Event=KillEvent,Action=eActionType_PressX,Filter=epfTransition)
m_Action=(Event=DisplayKill,Action=eActionType_PressX, eEventTipID=EBUTTON_ACTION_STEALTH_KILL)
m_Action=(Event=DisplayThrow,Action=eActionType_PressX, eEventTipID=EBUTTON_ACTION_THROW)

// [EchelonPlayer.SPHumanShieldAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)

// [EchelonPlayer.SPHumanShieldAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPHumanShieldAction] -DPadDown-
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldDPadDown, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPHumanShieldAction] -DPadUp-
m_Action=(Name=UseSonarGogglesState, StateCommand=Normal,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState, StateCommand=ForceOff,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPHumanShieldAction] -DPadLeft-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleLeft,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(Event=EndCycleInventoryLeftEvent,Action=eActionType_ReleaseDPadLeft, TargetType=TTYPE_None, Filter=epfCritical)

// [EchelonPlayer.SPHumanShieldAction] -DPadRight-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleRight,Action=eActionType_PressDPadRight, Filter=epfCritical)
m_Action=(Event=EndCycleInventoryRightEvent,Action=eActionType_ReleaseDPadRight, Filter=epfCritical)

// [EchelonPlayer.SPHumanShieldAction] -Movement-
m_Action=(Name=HumanShieldMovementState,Action=eActionType_Movement, TargetType=TTYPE_None)

// [EchelonPlayer.SPHumanShieldAction] -Right trigger
m_Action=(Event=ForceShoot,Action=eActionType_PressRightTrigger, Filter=epfCritical )
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Equip,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None) 
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=EmptyOnly,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None) 

// [EchelonPlayer.SPHumanShieldAction] -B-
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical)

// [EchelonPlayer.SPHumanShieldAction] -Tick-
m_Action=(Name=ExecuteActionState,Action=eActionType_Tick,Filter=epfExecute, TargetType=TTYPE_None)
m_Action=(Name=UseSonarGogglesState,StateCommand=Tick,Action=eActionType_Tick,iTickFrame=4, TargetType=TTYPE_None)
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Drop,Action=eActionType_Tick, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=AutoReloadTimer,Action=eActionType_Tick, iTickFrame=4, TargetType=TTYPE_None )
m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical )

// [EchelonPlayer.SPHumanShieldAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPHumanShieldAction] - PC Specific BEGIN -
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
m_Action=(Name=HumanShieldWeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldAlternateWeapon, TargetType=TTYPE_None)
// [EchelonPlayer.SPHumanShieldAction] -PC Specific END -

//----------------------------------------------------------------------------------
//
//							CROUCH
//
//----------------------------------------------------------------------------------

[EchelonPlayer.SPCrouchAction]

//execute hand 2 hand
m_Action=(Name=PrepareAttackState,StateCommand=Execute,Action=eActionType_Execute, TargetType=TTYPE_Enemy)
// [EchelonPlayer.SPCrouchAction] -Execute-
m_Action=(Name=MarkAndExecWeaponUtilityState,StateCommand=Drop,Action=eActionType_Execute, TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecWeaponUtilityState,StateCommand=Equip,Action=eActionType_Execute,TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecReloadState,Action=eActionType_Execute,TargetType=TTYPE_None)

//M&E Realization FROM HERE...
m_Action=(Name=MarkExecutionIdleState,StateCommand=AttackingPawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy)
//m_Action=(Name=MarkExecutionIdleState,StateCommand=Light,Action=eActionType_Execute, TargetType=TTYPE_Light)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Trap,Action=eActionType_Execute, TargetType=TTYPE_Trap)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Grenade,Action=eActionType_Execute, TargetType=TTYPE_Inventoriable)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Explosive,Action=eActionType_Execute, TargetType=TTYPE_Explosive)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Pawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy)
//... TO HERE

m_Action=(Name=MarkExecutionState,StateCommand=AttackingPawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy)
//m_Action=(Name=MarkExecutionState,StateCommand=Light,Action=eActionType_Execute, TargetType=TTYPE_Light)
m_Action=(Name=MarkExecutionState,StateCommand=Trap,Action=eActionType_Execute, TargetType=TTYPE_Trap)
m_Action=(Name=MarkExecutionState,StateCommand=Grenade,Action=eActionType_Execute, TargetType=TTYPE_Inventoriable)
m_Action=(Name=MarkExecutionState,StateCommand=Explosive,Action=eActionType_Execute, TargetType=TTYPE_Explosive)
m_Action=(Name=MarkExecutionState,StateCommand=Pawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy)

// [EchelonPlayer.SPCrouchAction] -A-
m_Action=(GameMode=eGameMode_MPOnly, Event=StopRevive, Action=eActionType_ReleaseA, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopReviveState, Action=eActionType_PressA, TargetType=TTYPE_Player)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopBoostedByPartnerState, Action=eActionType_PressA, TargetType=TTYPE_Player)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopBoostPartnerState, Action=eActionType_PressA, TargetType=TTYPE_GeoSpecialCase)
m_Action=(GameMode=eGameMode_MPOnly, Name=ThrowIRStrobeState,Action=eActionType_PressA, TargetType=TTYPE_None)
m_Action=(Name=UseWeaponStashState,Action=eActionType_PressA, TargetType=TTYPE_None )
m_Action=(Event=StackedAction,Action=eActionType_PressA,Filter=epfCritical)
m_Action=(Name=AreaPortalMoveState,Action=eActionType_PressA,TargetType=TTYPE_Portal)
m_Action=(Name=GeoVertPipeNavStartState,Action=eActionType_PressA,TargetType=TTYPE_VPipe)
m_Action=(Name=GeoVertPipeJumpState,Action=eActionType_PressA,TargetType=TTYPE_VPipe)
m_Action=(Name=GeoLedgeJumpState,Action=eActionType_PressA,TargetType=TTYPE_Ledge)
m_Action=(Name=GeoLedgeJumpState,Action=eActionType_PressA,TargetType=TTYPE_Railing)
m_Action=(Name=GeoLedgeJumpState,Action=eActionType_PressA,TargetType=TTYPE_GeoSpecialCase)
m_Action=(Name=Geo1uJumpState,Action=eActionType_PressA,TargetType=TTYPE_JumpOver)
m_Action=(Name=CoverToCoverMkIIState,Action=eActionType_PressA,TargetType=TTYPE_None)
m_Action=(Name=GeoHorPipeJumpState,Action=eActionType_PressA,TargetType=TTYPE_HPipe)
m_Action=(Name=GeoRailingJumpState,Action=eActionType_PressA,TargetType=TTYPE_Railing)
//m_Action=(Name=GeoHorPipe4ULateralJumpState,Action=eActionType_PressA,TargetType=TTYPE_None)
m_Action=(Name=GeoDropToLedgeState,Action=eActionType_PressB,TargetType=TTYPE_Ledge )
m_Action=(Event=CrouchSprint,Action=eActionType_HoldA,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=CrouchSprintOff,Action=eActionType_ReleaseA,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=SprintOff,Action=eActionType_ReleaseA,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPCrouchAction] -X-
// scripted scenes require PrepareAttackState PreInterrogateState PreInterrogateFailedState ExoticInterrogationState to be eActionType_PressB
m_Action=(Name=ExoticInterrogationState,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=ExoticInterrogationState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateFailedState,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateFailedState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateState,Action=eActionType_PressX, TargetType=TTYPE_Enemy)
m_Action=(Name=PreInterrogateState,Action=eActionType_PressB, TargetType=TTYPE_Enemy)
m_Action=(Name=AttackDoorState,StateCommand=DirectionalTarget,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=PrepareAttackState,Action=eActionType_PressX, TargetType=TTYPE_Enemy)
m_Action=(Name=PrepareAttackState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=AttackDoorState,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=StartCarAlarmState,Action=eActionType_PressX, TargetType=TTYPE_Car )

// [EchelonPlayer.SPCrouchAction] -RightAnalog-
m_Action=(Name=ReloadFireWeaponState,Action=eActionType_PressRightAnalog,bListenToFirstOnly=true)
m_Action=(Name=WeaponUtilityState,StateCommand=DrawReload,Action=eActionType_PressRightAnalog,bListenToFirstOnly=true)

// [EchelonPlayer.SPCrouchAction] -LeftAnalog-
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)

// [EchelonPlayer.SPCrouchAction] -Visual Interaction-
m_Action=(Name=CustomInteractionState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=CustomInteractionState,Action=eActionType_VisualInteraction,StateCommand=NPC, TargetType=TTYPE_Enemy ) //lpdallaire: the state command is there to prevent state pool bugs
m_Action=(Name=ExternalInventoryState,Action=eActionType_VisualInteraction, TargetType=TTYPE_None)
m_Action=(Name=SnakeCamState,StateCommand=On,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseDoorState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseDoorState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualDoorBreachState, StateCommand=Confirm, Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualDoorBreachState, StateCommand=Propose, Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseWindowState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseWindowState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseSwitchState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch)
m_Action=(Name=PickUpState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Inventoriable)
m_Action=(Name=CoopHackingState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=CoopPlantC4State,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=UseWeaponStashState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=CoopTurretState,Action=eActionType_VisualInteraction,TargetType=TTYPE_Switch)

// [EchelonPlayer.SPCrouchAction] -LeftShoulder-
m_Action=(Name=UseStickyCamState,StateCommand=Normal,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=ThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=UsePortableEMPState,StateCommand=Normal,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=UseMineDetonatorState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)

// [EchelonPlayer.SPCrouchAction] -Y-
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOn, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualExecutionState, StateCommand=Confirm, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=OrderExecutionState,	Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOff, Action=eActionType_ReleaseY, Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPCrouchAction] -B- 
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical)
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical)
m_Action=(Name=CoverNavStartState,StateCommand=InstantCheck,Action=eActionType_PressB, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_HoldB, TargetType=TTYPE_None )
m_Action=(Name=RollState,Action=eActionType_HoldB,TargetType=TTYPE_None)

// [EchelonPlayer.SPCrouchAction] -DPadLeft-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleLeft,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryLeftEvent,Action=eActionType_ReleaseDPadLeft, TargetType=TTYPE_None, Filter=epfCritical )

// [EchelonPlayer.SPCrouchAction] -DPadRight-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleRight,Action=eActionType_PressDPadRight, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryRightEvent,Action=eActionType_ReleaseDPadRight, TargetType=TTYPE_None, Filter=epfCritical )

// [EchelonPlayer.SPCrouchAction] -DPadDown-
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPCrouchAction] -DPadUp-
m_Action=(Name=UseSonarGogglesState, StateCommand=Normal,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState, StateCommand=ForceOff,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPCrouchAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )


// [EchelonPlayer.SPCrouchAction] -Tick-
m_Action=(Name=GeoLowDropState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState,StateCommand=Tick,Action=eActionType_Tick,iTickFrame=4, TargetType=TTYPE_None )
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Drop,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=GenericFallState,StateCommand=AutoDetect,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical)
m_Action=(Name=ExecuteActionState,Action=eActionType_Tick,Filter=epfExecute, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Restore,Action=eActionType_Tick, TargetType=TTYPE_None )
//m_Action=(Name=UseEarPieceState,StateCommand=Sequencer,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=IdleLayerState,Action=eActionType_Tick,iTickFrame=10, TargetType=TTYPE_None )
m_Action=(Name=StopOnGapState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=AutoReloadTimer,Action=eActionType_Tick, iTickFrame=4, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPCrouchAction] -Movement-
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPCrouchAction] -Right trigger
m_Action=(Event=ForceShoot,Action=eActionType_PressRightTrigger, Filter=epfCritical )
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=EmptyOnly,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )

// [EchelonPlayer.SPCrouchAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)

// [EchelonPlayer.SPCrouchAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPCrouchAction] -PC Specific BEGIN-
m_Action=(Name=WeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldAlternateWeapon, TargetType=TTYPE_None)

m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Event=CrouchOff,Action=eActionType_PressRun,Filter=epfCritical)

m_Action=(Name=InventoryUtilityState,StateCommand=SelectFragGrenade,Action=eActionType_PressFragGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectFlashBang,Action=eActionType_PressFlashBang, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectEMPGrenade,Action=eActionType_PressEMPGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteMine,Action=eActionType_PressRemoteMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectStickyCam,Action=eActionType_PressStickyCam, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectPortableEMP,Action=eActionType_PressPortableEMP, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectProximityMine,Action=eActionType_PressProximityMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteDetonator,Action=eActionType_PressRemoteDetonator, Filter=epfCritical)
// [EchelonPlayer.SPCrouchAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							SLIDE
//
//----------------------------------------------------------------------------------

//The Slide Action Scheme // 
[EchelonPlayer.SPSlideAction]

// A
//m_Action=(Name=RollState,Action=eActionType_PressA, TargetType=TTYPE_None )

// [EchelonPlayer.SPSlideAction] -X-
m_Action=(Name=UsePortableEMPState,StateCommand=Normal,Action=eActionType_ReleaseX, TargetType=TTYPE_None )
m_Action=(Name=UseMineDetonatorState,Action=eActionType_ReleaseX,TargetType=TTYPE_None)

// [EchelonPlayer.SPSlideAction] -B-
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_HoldB, TargetType=TTYPE_None )

// [EchelonPlayer.SPSlideAction] -DPadLeft-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleLeft,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryLeftEvent,Action=eActionType_ReleaseDPadLeft, Filter=epfCritical)

// [EchelonPlayer.SPSlideAction] -DPadRight-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleRight,Action=eActionType_PressDPadRight, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryRightEvent,Action=eActionType_ReleaseDPadRight, Filter=epfCritical)

// [EchelonPlayer.SPSlideAction] -DPadDown-

// [EchelonPlayer.SPSlideAction] -DPadUp-

// [EchelonPlayer.SPSlideAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPSlideAction] -Tick-
m_Action=(Name=GenericFallState,StateCommand=AutoDetect,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical )
m_Action=(Name=ReloadFireWeaponState,StateCommand=AutoReloadTimer,Action=eActionType_Tick, iTickFrame=4, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPSlideAction] -Y-
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOn, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualExecutionState, StateCommand=Confirm, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=OrderExecutionState,	Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOff, Action=eActionType_ReleaseY, Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPSlideAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)

// [EchelonPlayer.SPSlideAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPSlideAction] -LeftAnalog-

// [EchelonPlayer.SPSlideAction] -LeftAnalog-
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)

//  When the player is lying on the ground
[EchelonPlayer.SPGroundIdleAction]

// [EchelonPlayer.SPGroundIdleAction] -Back-
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPGroundIdleAction] -PC Specific BEGIN-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Name=InventoryUtilityState,StateCommand=SelectFragGrenade,Action=eActionType_PressFragGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectFlashBang,Action=eActionType_PressFlashBang, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectEMPGrenade,Action=eActionType_PressEMPGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteMine,Action=eActionType_PressRemoteMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectStickyCam,Action=eActionType_PressStickyCam, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectPortableEMP,Action=eActionType_PressPortableEMP, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectProximityMine,Action=eActionType_PressProximityMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteDetonator,Action=eActionType_PressRemoteDetonator, Filter=epfCritical)
// [EchelonPlayer.SPGroundIdleAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							FALL
//
//----------------------------------------------------------------------------------

//The Slide Action Scheme // 
[EchelonPlayer.SPFallAction]

// [EchelonPlayer.SPFallAction] -B-
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_HoldB, TargetType=TTYPE_None )

// [EchelonPlayer.SPFallAction] -DPadLeft-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleLeft,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryLeftEvent,Action=eActionType_ReleaseDPadLeft, TargetType=TTYPE_None, Filter=epfCritical )

// [EchelonPlayer.SPFallAction] -DPadRight-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleRight,Action=eActionType_PressDPadRight, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryRightEvent,Action=eActionType_ReleaseDPadRight, TargetType=TTYPE_None, Filter=epfCritical )

// [EchelonPlayer.SPFallAction] -DPadDown-

// [EchelonPlayer.SPFallAction] -DPadUp-

// [EchelonPlayer.SPFallAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPFallAction] -A-

// [EchelonPlayer.SPFallAction] -Y-
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOn, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualExecutionState, StateCommand=Confirm, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=OrderExecutionState,	Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOff, Action=eActionType_ReleaseY, Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPFallAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,	Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,	Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,	StateCommand=ReleaseMark,	Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical)

// [EchelonPlayer.SPFallAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPFallAction] -LeftAnalog-

// [EchelonPlayer.SPFallAction] -LeftAnalog-
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)

// [EchelonPlayer.SPFallAction] -Tick-

// [EchelonPlayer.SPFallAction] -PC Specific BEGIN-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Name=InventoryUtilityState,StateCommand=SelectFragGrenade,Action=eActionType_PressFragGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectFlashBang,Action=eActionType_PressFlashBang, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectEMPGrenade,Action=eActionType_PressEMPGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteMine,Action=eActionType_PressRemoteMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectStickyCam,Action=eActionType_PressStickyCam, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectPortableEMP,Action=eActionType_PressPortableEMP, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectProximityMine,Action=eActionType_PressProximityMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteDetonator,Action=eActionType_PressRemoteDetonator, Filter=epfCritical)
// [EchelonPlayer.SPFallAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							GEO NAV
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPGeoNavAction]

// [EchelonPlayer.SPGeoNavAction] [Y]
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOn, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualExecutionState, StateCommand=Confirm, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=OrderExecutionState,	Action=eActionType_PressY, Filter=epfCritical)
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOff, Action=eActionType_ReleaseY, Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] [LeftShoulder]
m_Action=(Name=UseStickyCamState,StateCommand=Normal,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=GeoLedgeThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=GeoHorPipeThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=GeoVertPipeThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=UsePortableEMPState,StateCommand=Normal,Action=eActionType_ReleaseLeftShoulder, TargetType=TTYPE_None )
m_Action=(Name=UseMineDetonatorState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)

// [EchelonPlayer.SPGeoNavAction] [A] Button
m_Action=(Event=StackedAction,Action=eActionType_PressA,Filter=epfCritical)
m_Action=(Name=GeoNavExitState,StateCommand=DirectionalDropToGeo,Action=eActionType_PressB,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=GeoNavExitState,StateCommand=DirectionalDrop,Action=eActionType_PressB,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=GeoNavExitState,StateCommand=Hoist,Action=eActionType_PressA,Filter=epfGeoNav, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] [X] Button
// scripted scenes require PrepareAttackState PreInterrogateState PreInterrogateFailedState ExoticInterrogationState to be eActionType_PressB
m_Action=(Name=GeoDeathFromAboveState,Action=eActionType_PressX,StateCommand=DirectionalTarget,TargetType=TTYPE_None )
m_Action=(Name=PrepareAttackState,Action=eActionType_PressX,Filter=epfGeoNav, TargetType=TTYPE_Enemy )
m_Action=(Name=PrepareAttackState,Action=eActionType_PressB,Filter=epfGeoNav, TargetType=TTYPE_Enemy )
m_Action=(Event=KillEvent,Action=eActionType_ReleaseX,PrecedingAction=eActionType_PressB,fMaxDelay=0.2,Filter=epfTransition)
m_Action=(Event=KillOrThrowEvent,Action=eActionType_PressX,Filter=epfTransition)
m_Action=(Name=GeoDeathFromAboveState,Action=eActionType_PressX,StateCommand=NoDoubleDeathEval,TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] B
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StackedDrop,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=GeoDeathFromAboveState,Action=eActionType_PressX, TargetType=TTYPE_None )
m_Action=(Name=GeoVertPipeSlideState,Action=eActionType_PressB,Filter=epfGeoNav,TargetType=TTYPE_None)
m_Action=(Name=GeoNavExitState,StateCommand=DropToGeo,Action=eActionType_PressB,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=GeoNavExitState,StateCommand=Drop,Action=eActionType_PressB,Filter=epfGeoNav, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] Right trigger
m_Action=(Name=GeoHorPipeShootingState,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )
m_Action=(Name=ContextualGeoShootingState,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )
m_Action=(Event=ReloadEmptyWeaponEvent,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] -RightAnalog-
m_Action=(Event=ReloadWeaponEvent,Action=eActionType_PressRightAnalog,eEventTipID=EBUTTON_ACTION_RELOAD)

// [EchelonPlayer.SPGeoNavAction] -LeftAnalog-
m_Action=(Event=StackedDrop,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)
m_Action=(Name=GeoDeathFromAboveState,Action=eActionType_PressX, TargetType=TTYPE_None )
m_Action=(Name=GeoVertPipeSlideState,Action=eActionType_PressB,Filter=epfGeoNav,TargetType=TTYPE_None)
m_Action=(Name=GeoNavExitState,StateCommand=DropToGeo,Action=eActionType_PressB,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=GeoNavExitState,StateCommand=Drop,Action=eActionType_PressB,Filter=epfGeoNav, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] Right shoulder
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)

// [EchelonPlayer.SPGeoNavAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] -Visual Interaction-
m_Action=(Name=UseWindowFromGeoState,StateCommand=Open,Action=eActionType_VisualInteraction,Filter=epfGeoNav, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseWindowFromGeoState,StateCommand=Close,Action=eActionType_VisualInteraction,Filter=epfGeoNav, TargetType=TTYPE_EntryWay )

// [EchelonPlayer.SPGeoNavAction] -DPadLeft-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleLeft,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryLeftEvent,Action=eActionType_ReleaseDPadLeft, TargetType=TTYPE_None, Filter=epfCritical )

// [EchelonPlayer.SPGeoNavAction] -DPadRight-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleRight,Action=eActionType_PressDPadRight, TargetType=TTYPE_None, Filter=epfCritical )
m_Action=(Event=EndCycleInventoryRightEvent,Action=eActionType_ReleaseDPadRight, TargetType=TTYPE_None, Filter=epfCritical )

// [EchelonPlayer.SPGeoNavAction] -DPadUp-
m_Action=(Name=UseSonarGogglesState, StateCommand=Normal,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState, StateCommand=ForceOff,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] -DPadDown-
m_Action=(Event=HolsterWeaponEvent,Action=eActionType_HoldDPadDown)
m_Action=(Name=GeoHorPipeShootingState,StateCommand=Equip,Action=eActionType_PressDPadDown,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=ContextualGeoShootingState,StateCommand=Equip,Action=eActionType_PressDPadDown,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Event=CycleWeaponEvent,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499)

// [EchelonPlayer.SPGeoNavAction] -Tick-
m_Action=(Name=UseSonarGogglesState,StateCommand=Tick,Action=eActionType_Tick,iTickFrame=4, TargetType=TTYPE_None )
m_Action=(Name=GeoNavWeaponUtilityState,StateCommand=Drop,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=ExecuteActionState,Action=eActionType_Tick,Filter=epfExecute, TargetType=TTYPE_None )
m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical )

//  -Execute-
//m_Action=(Name=GeoShootToTargetReloadState,Action=eActionType_Execute, TargetType=TTYPE_None )
// Attacking pawn
m_Action=(Name=GeoHorPipeShootToTargetState,StateCommand=AttackingPawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy )
m_Action=(Name=GeoShootToTargetState,StateCommand=AttackingPawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy )
//Lights
//m_Action=(Name=GeoHorPipeShootToTargetState,StateCommand=Light,Action=eActionType_Execute, TargetType=TTYPE_Light )
//m_Action=(Name=GeoShootToTargetState,StateCommand=Light,Action=eActionType_Execute, TargetType=TTYPE_Light )
//m_Action=(Name=GeoShootToTargetMissState,StateCommand=Light,Action=eActionType_Execute, TargetType=TTYPE_Light )
//Traps
m_Action=(Name=GeoHorPipeShootToTargetState,StateCommand=Trap,Action=eActionType_Execute, TargetType=TTYPE_Trap )
m_Action=(Name=GeoShootToTargetState,StateCommand=Trap,Action=eActionType_Execute, TargetType=TTYPE_Trap )
//m_Action=(Name=GeoShootToTargetMissState,StateCommand=Trap,Action=eActionType_Execute, TargetType=TTYPE_Trap )
//Grenades
m_Action=(Name=GeoHorPipeShootToTargetState,StateCommand=Grenade,Action=eActionType_Execute, TargetType=TTYPE_Inventoriable )
m_Action=(Name=GeoShootToTargetState,StateCommand=Grenade,Action=eActionType_Execute, TargetType=TTYPE_Inventoriable )
//m_Action=(Name=GeoShootToTargetMissState,StateCommand=Grenade,Action=eActionType_Execute, TargetType=TTYPE_Inventoriable )
//Explosives
m_Action=(Name=GeoHorPipeShootToTargetState,StateCommand=Explosive,Action=eActionType_Execute, TargetType=TTYPE_Explosive )
m_Action=(Name=GeoShootToTargetState,StateCommand=Explosive,Action=eActionType_Execute, TargetType=TTYPE_Explosive )
//m_Action=(Name=GeoShootToTargetMissState,StateCommand=Explosive,Action=eActionType_Execute, TargetType=TTYPE_Explosive )

//Pawns
m_Action=(Name=GeoHorPipeShootToTargetState,StateCommand=Pawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy )
m_Action=(Name=GeoShootToTargetState,StateCommand=Pawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy )
//m_Action=(Name=GeoShootToTargetMissState,StateCommand=Pawn,Action=eActionType_Execute, TargetType=TTYPE_Enemy )

// [EchelonPlayer.SPGeoNavAction] -Movement-
m_Action=(Name=GeoHorPipeShootingState,StateCommand=IfGunOutOnly,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=ContextualGeoShootingState,StateCommand=IfGunOutOnly,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoMechouiNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoLedgeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoVertPipeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPGeoNavAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPGeoNavAction] -PC Specific BEGIN-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Event=HolsterWeaponEvent,Action=eActionType_HoldPrimaryWeapon)
m_Action=(Event=HolsterWeaponEvent,Action=eActionType_HoldAlternateWeapon)
m_Action=(Name=GeoHorPipeShootingState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=GeoHorPipeShootingState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=ContextualGeoShootingState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon,Filter=epfGeoNav, TargetType=TTYPE_None )
m_Action=(Name=ContextualGeoShootingState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon,Filter=epfGeoNav, TargetType=TTYPE_None )

m_Action=(Name=InventoryUtilityState,StateCommand=SelectFragGrenade,Action=eActionType_PressFragGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectFlashBang,Action=eActionType_PressFlashBang, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectEMPGrenade,Action=eActionType_PressEMPGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteMine,Action=eActionType_PressRemoteMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectStickyCam,Action=eActionType_PressStickyCam, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectPortableEMP,Action=eActionType_PressPortableEMP, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectProximityMine,Action=eActionType_PressProximityMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteDetonator,Action=eActionType_PressRemoteDetonator, Filter=epfCritical)
// [EchelonPlayer.SPGeoNavAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							INTERROGATION
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPInterrogateAction]

//  -Execute-

// [EchelonPlayer.SPInterrogateAction] -B-
m_Action=(Event=SequencerInterrogation,Action=eActionType_PressB,eEventTipID=EBUTTON_ACTION_INTERROGATE)
m_Action=(Event=SequencerInterrogationForVP,Action=eActionType_PressB,eEventTipID=EBUTTON_ACTION_SECUREVP)
m_Action=(Event=DamageEnemyEvent,Action=eActionType_PressB,PrecedingAction=eActionType_ReleaseB,fMaxDelay=0.30) //Done on a doubletap when from idle
m_Action=(Name=UseInterrogationObjectState,Action=eActionType_PressB, TargetType=TTYPE_Interrogation )
m_Action=(Name=BrutalizeEnemyState,Action=eActionType_PressB, TargetType=TTYPE_None )
// [EchelonPlayer.SPInterrogateAction] -Y-

// [EchelonPlayer.SPInterrogateAction] -X-

// [EchelonPlayer.SPInterrogateAction] -Vis. int.-
m_Action=(Name=CustomInteractionState,StateCommand=InterroEnabled,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )

// [EchelonPlayer.SPInterrogateAction] -B- 
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical)

// [EchelonPlayer.SPInterrogateAction] -RightShoulder-

// [EchelonPlayer.SPInterrogateAction] -LeftShoulder-

// [EchelonPlayer.SPInterrogateAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPInterrogateAction] -LeftAnalog-

// [EchelonPlayer.SPInterrogateAction] -DPadLeft-

// [EchelonPlayer.SPInterrogateAction] -DPadRight-

// [EchelonPlayer.SPInterrogateAction] -DPadDown-

// [EchelonPlayer.SPInterrogateAction] -Movement-
m_Action=(Name=InterrogateWalkState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPInterrogateAction] -Tick-
m_Action=(Name=UseSonarGogglesState,StateCommand=ForceOff,Action=eActionType_Tick,Filter=epfCritical,TargetType=TTYPE_None)
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick, TargetType=TTYPE_None )
//m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical )

// [EchelonPlayer.SPInterrogateAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)



//----------------------------------------------------------------------------------
//
//							GADGET - SNAKE CAM
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPSnakeCamAction]

// [EchelonPlayer.SPSnakeCamAction]  -Execute-

// [EchelonPlayer.SPSnakeCamAction] -B-
m_Action=(Event=SnakeCamOff,Action=eActionType_PressB)
m_Action=(Name=SnakeCamState,StateCommand=Off,Action=eActionType_PressB, TargetType=TTYPE_None)

// [EchelonPlayer.SPSnakeCamAction] -Y-
m_Action=(Event=SnakeCamOff,Action=eActionType_PressY)

// [EchelonPlayer.SPSnakeCamAction] -X-
m_Action=(Event=SnakeCamOff,Action=eActionType_PressX)

// [EchelonPlayer.SPSnakeCamAction] -A-
m_Action=(Event=SnakeCamOff,Action=eActionType_PressA)


// [EchelonPlayer.SPSnakeCamAction] -LeftShoulder-


// [EchelonPlayer.SPSnakeCamAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)

// [EchelonPlayer.SPSnakeCamAction] -RightAnalog-
//m_Action=(Name=TogglePrecisionModeState,Action=eActionType_PressRightAnalog, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionMode,Action=eActionType_PressRightAnalog,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPSnakeCamAction] -LeftAnalog-
//m_Action=(Event=SnakeCamOff,Action=eActionType_PressLeftAnalog)
//m_Action=(Name=SnakeCamState,StateCommand=Off,Action=eActionType_PressLeftAnalog, TargetType=TTYPE_EntryWay )

// [EchelonPlayer.SPSnakeCamAction] -LeftTrigger- 
m_Action=(Event=DetectB2W,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPSnakeCamAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPSnakeCamAction] -DPadDown-
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPSnakeCamAction] -DPadUp-


// [EchelonPlayer.SPSnakeCamAction] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState,StateCommand=ForceOff,Action=eActionType_Tick,Filter=epfCritical,TargetType=TTYPE_None)

// [EchelonPlayer.SPSnakeCamAction] -Back-
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPSnakeCamAction] -PC Specific BEGIN-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Name=WeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldAlternateWeapon, TargetType=TTYPE_None)

// [EchelonPlayer.SPSnakeCamAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							GADGET - STICKY CAM
//
//----------------------------------------------------------------------------------

[EchelonPlayer.SPStickyCamAction]

// [EchelonPlayer.SPStickyCamAction] -Execute-

// [EchelonPlayer.SPStickyCamAction] -X-
m_Action=(Event=ExitCam,Action=eActionType_PressX, eEventTipID=EBUTTON_ACTION_EXIT_STICKYCAM)
//m_Action=(Event=Whistle,Action=eActionType_PressX, eEventTipID=EBUTTON_ACTION_WHISTLE )

// [EchelonPlayer.SPStickyCamAction] -Y-
m_Action=(Event=Explode,Action=eActionType_PressY, eEventTipID=EBUTTON_ACTION_EXPLODE_STICKYCAM )

// [EchelonPlayer.SPStickyCamAction] -B-
m_Action=(Event=Whistle,Action=eActionType_PressB, eEventTipID=EBUTTON_ACTION_WHISTLE )
//m_Action=(Event=ExitCam,Action=eActionType_PressB, eEventTipID=EBUTTON_ACTION_EXIT_STICKYCAM)

// [EchelonPlayer.SPStickyCamAction] -A-
m_Action=(Event=Deactivate,Action=eActionType_PressA, eEventTipID=EBUTTON_ACTION_DEACTIVATE)

// [EchelonPlayer.SPStickyCamAction] -LeftTrigger- 
m_Action=(Event=DetectB2W,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPStickyCamAction] -LeftShoulder-

// [EchelonPlayer.SPStickyCamAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)

// [EchelonPlayer.SPStickyCamAction] -RightAnalog-
//m_Action=(Name=TogglePrecisionModeState,Action=eActionType_PressRightAnalog,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionMode,Action=eActionType_PressRightAnalog,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPStickyCamAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoMechouiNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoLedgeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoVertPipeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPStickyCamAction] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPStickyCamAction] -Back-
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPStickyCamAction] -DPadDown-
//m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldDPadDown, TargetType=TTYPE_None)
//m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
//m_Action=(Name=WeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPStickyCamAction] -PC Specific BEGIN-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

//m_Action=(Name=WeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
//m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldPrimaryWeapon, TargetType=TTYPE_None)
//m_Action=(Name=WeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
//m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldAlternateWeapon, TargetType=TTYPE_None)
// [EchelonPlayer.SPStickyCamAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							EXOTIC - FILMING CAM
//
//----------------------------------------------------------------------------------

[EchelonPlayer.SPFilmingCamAction]

// [EchelonPlayer.SPFilmingCamAction] -Execute-

// [EchelonPlayer.SPFilmingCamAction] -B-
//m_Action=(Event=ExitFilmingState,Action=eActionType_PressB)
//m_Action=(Name=UseFilmingCameraState,StateCommand=Off,Action=eActionType_PressB, TargetType=TTYPE_None)

// [EchelonPlayer.SPFilmingCamAction] -A-
//m_Action=(Event=ExitFilmingState,Action=eActionType_PressA)

// [EchelonPlayer.SPFilmingCamAction] -DPadLeft-
m_Action=(Event=DefaultPreviousCam,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None)

// [EchelonPlayer.SPFilmingCamAction] -DPadRight-
m_Action=(Event=DefaultNextCam,Action=eActionType_PressDPadRight, TargetType=TTYPE_None)

// [EchelonPlayer.SPFilmingCamAction] -DPadDown-
m_Action=(Event=PreviousCam,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)

// [EchelonPlayer.SPFilmingCamAction] -DPadUp-
m_Action=(Event=NextCam,Action=eActionType_PressDPadUp, TargetType=TTYPE_None)

// [EchelonPlayer.SPFilmingCamAction] -LeftTrigger- 
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPFilmingCamAction] -LeftShoulder-

// [EchelonPlayer.SPFilmingCamAction] -RightShoulder-

// [EchelonPlayer.SPFilmingCamAction] -RightAnalog-
//m_Action=(Name=TogglePrecisionModeState,Action=eActionType_PressRightAnalog,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionMode,Action=eActionType_PressRightAnalog,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPFilmingCamAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoMechouiNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoLedgeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoVertPipeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPFilmingCamAction] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPFilmingCamAction] -Back-
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)



//----------------------------------------------------------------------------------
//
//							TURRET CAMERA
//
//----------------------------------------------------------------------------------

[EchelonPlayer.SPTurretCamAction]

// [EchelonPlayer.SPTurretCamAction] -Execute-

// [EchelonPlayer.SPTurretCamAction] -X-


// [EchelonPlayer.SPTurretCamAction] -Y-


// [EchelonPlayer.SPTurretCamAction] -B-
m_Action=(Event=ExitTurretCam,Action=eActionType_PressB,eEventTipID=EBUTTON_ACTION_CANCEL_ACTION)

// [EchelonPlayer.SPTurretCamAction] -A-
//m_Action=(Event=ExitTurretCam,Action=eActionType_PressA)

// [EchelonPlayer.SPTurretCamAction] -LeftTrigger- 
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPTurretCamAction] -LeftShoulder-

// [EchelonPlayer.SPTurretCamAction] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical, TargetType=TTYPE_None)

// [EchelonPlayer.SPTurretCamAction] -RightAnalog-
//m_Action=(Name=TogglePrecisionModeState,Action=eActionType_PressRightAnalog,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionMode,Action=eActionType_PressRightAnalog,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPTurretCamAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoMechouiNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoLedgeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=GeoVertPipeNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPTurretCamAction] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPTurretCamAction] -Back-
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPTurretCamAction] -PC Specific BEGIN-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)
// [EchelonPlayer.SPTurretCamAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							3D I N V E N T O R Y
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPExtInventoryAction]

// [EchelonPlayer.SPExtInventoryAction] -A-
m_Action=(Event=Upgrade,Action=eActionType_PressA)
m_Action=(Event=Equip,Action=eActionType_PressA)
// [EchelonPlayer.SPExtInventoryAction] -Y-
//m_Action=(Event=PickUp,Action=eActionType_PressY)
// [EchelonPlayer.SPExtInventoryAction] -X-
m_Action=(Event=SelectItem,Action=eActionType_PressX)
// [EchelonPlayer.SPExtInventoryAction] -B-
m_Action=(Event=DeselectItem,Action=eActionType_PressB)
m_Action=(Event=InventoryOff,Action=eActionType_PressB)

// [EchelonPlayer.SPExtInventoryAction] -LeftAnalog-
//m_Action=(Event=PickUp,Action=eActionType_PressLeftAnalog)

// [EchelonPlayer.SPExtInventoryAction] -DPadUp-
m_Action=(Event=SelectUp,StateCommand=Draw,Action=eActionType_PressDPadUp)
// [EchelonPlayer.SPExtInventoryAction] -DPadDown-
m_Action=(Event=SelectDown,StateCommand=Draw,Action=eActionType_PressDPadDown)
// [EchelonPlayer.SPExtInventoryAction] -DPadLeft-
m_Action=(Event=SelectRight,StateCommand=Draw,Action=eActionType_PressDPadRight)
// [EchelonPlayer.SPExtInventoryAction] -DPadRight-
m_Action=(Event=SelectLeft,StateCommand=Draw,Action=eActionType_PressDPadLeft)

// [EchelonPlayer.SPExtInventoryAction] -LeftTrigger-
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=PrevPage,Action=eActionType_PressLeftTrigger,Filter=epfCritical)

// [EchelonPlayer.SPExtInventoryAction] -RightTrigger- 
m_Action=(Event=NextPage,Action=eActionType_PressRightTrigger,Filter=epfCritical)

// [EchelonPlayer.SPExtInventoryAction] -Movement-
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPExtInventoryAction] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical,TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState,StateCommand=ForceOff,Action=eActionType_Tick,Filter=epfCritical,TargetType=TTYPE_None)


// [EchelonPlayer.SPExtInventoryAction] -Back-
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)




//----------------------------------------------------------------------------------
//
//							MULTIPLAYER COOP DOWNED
//
//----------------------------------------------------------------------------------
[EchelonPlayer.MPCoopDownedAction]

// [EchelonPlayer.MPCoopDownedAction] -A-
m_Action=(Name=CoopDownedShootingState,Action=eActionType_PressA,TargetType=TTYPE_None)

// [EchelonPlayer.MPCoopDownedAction] -Right Analog-
m_Action=(Event=ReloadWeaponEvent,Action=eActionType_PressRightAnalog,eEventTipID=EBUTTON_ACTION_RELOAD)

// [EchelonPlayer.MPCoopDownedAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.MPCoopDownedAction] -B-
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.MPCoopDownedAction] -RightTrigger-
m_Action=(Event=ReloadEmptyWeapon,Action=eActionType_PressRightTrigger,TargetType=TTYPE_None)
// m_Action=(Name=CoopDownedShootingState,StateCommand=Shoot,Action=eActionType_PressRightTrigger,TargetType=TTYPE_None)

// [EchelonPlayer.MPCoopDownedAction] -Movement-
m_Action=(Name=MovementState,Action=eActionType_Movement)

// [EchelonPlayer.MPCoopDownedAction] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState,StateCommand=ForceOff,Action=eActionType_Tick,Filter=epfCritical,TargetType=TTYPE_None)
m_Action=(Name=GenericFallState,StateCommand=AutoDetect,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )

// [EchelonPlayer.MPCoopDownedAction] -Right shoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder, bListenToFirstOnly=true)
m_Action=(Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder, StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)


//----------------------------------------------------------------------------------
//
//							MULTIPLAYER COOP CHOKED
//
//----------------------------------------------------------------------------------
[EchelonPlayer.MPCoopChokedAction]

// [EchelonPlayer.MPCoopChokedAction] -A-
m_Action=(Event=Dodge,Action=eActionType_PressA,eEventTipID=EBUTTON_ACTION_DODGE)

// [EchelonPlayer.MPCoopChokedAction] -B-
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.MPCoopChokedAction] -Movement-
m_Action=(Name=MovementState,Action=eActionType_Movement)

// [EchelonPlayer.MPCoopChokedAction] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=GenericFallState,StateCommand=AutoDetect,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )




//----------------------------------------------------------------------------------
//
//							STOP ON GAP
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPStopOnGap]

// [EchelonPlayer.SPStopOnGap] -Execute-
m_Action=(Name=MarkAndExecWeaponUtilityState,StateCommand=Drop,Action=eActionType_Execute,TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecWeaponUtilityState,StateCommand=Equip,Action=eActionType_Execute,TargetType=TTYPE_None)
m_Action=(Name=MarkAndExecReloadState,Action=eActionType_Execute,TargetType=TTYPE_None)

//M&E Realization FROM HERE...
m_Action=(Name=MarkExecutionIdleState,StateCommand=AttackingPawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//m_Action=(Name=MarkExecutionIdleState,StateCommand=Light,Action=eActionType_Execute,TargetType=TTYPE_Light)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Trap,Action=eActionType_Execute,TargetType=TTYPE_Trap)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Grenade,Action=eActionType_Execute,TargetType=TTYPE_Inventoriable)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Explosive,Action=eActionType_Execute,TargetType=TTYPE_Explosive)
m_Action=(Name=MarkExecutionIdleState,StateCommand=Pawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//... TO HERE

m_Action=(Name=MarkExecutionState,StateCommand=AttackingPawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//m_Action=(Name=MarkExecutionState,StateCommand=Light,Action=eActionType_Execute,TargetType=TTYPE_Light)
//m_Action=(Name=MarkExecutionMissState,StateCommand=Light,Action=eActionType_Execute,TargetType=TTYPE_Light)
m_Action=(Name=MarkExecutionState,StateCommand=Trap,Action=eActionType_Execute,TargetType=TTYPE_Trap)
//m_Action=(Name=MarkExecutionMissState,StateCommand=Trap,Action=eActionType_Execute,TargetType=TTYPE_Trap)
m_Action=(Name=MarkExecutionState,StateCommand=Grenade,Action=eActionType_Execute,TargetType=TTYPE_Inventoriable)
//m_Action=(Name=MarkExecutionMissState,StateCommand=Grenade,Action=eActionType_Execute,TargetType=TTYPE_Inventoriable)
m_Action=(Name=MarkExecutionState,StateCommand=Explosive,Action=eActionType_Execute,TargetType=TTYPE_Explosive)
//m_Action=(Name=MarkExecutionMissState,StateCommand=Explosive,Action=eActionType_Execute,TargetType=TTYPE_Explosive)
m_Action=(Name=MarkExecutionState,StateCommand=Pawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)
//m_Action=(Name=MarkExecutionMissState,StateCommand=Pawn,Action=eActionType_Execute,TargetType=TTYPE_Enemy)

// [EchelonPlayer.SPStopOnGap] -A-
m_Action=(Event=StackedAction,Action=eActionType_PressA,Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Event=StopRevive, Action=eActionType_ReleaseA, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopReviveState, Action=eActionType_PressA, TargetType=TTYPE_Player)
m_Action=(Name=GeoHorPipeJumpState,Action=eActionType_PressA,TargetType=TTYPE_HPipe)
m_Action=(Name=GeoRailingJumpState,Action=eActionType_PressA,TargetType=TTYPE_Railing)
m_Action=(Name=GeoDropToLedgeState,Action=eActionType_PressB,TargetType=TTYPE_Ledge)

// [EchelonPlayer.SPStopOnGap] -Vis. int.-

// [EchelonPlayer.SPStopOnGap] -RightAnalog-
m_Action=(Name=ReloadFireWeaponState,Action=eActionType_PressRightAnalog,bListenToFirstOnly=true)
m_Action=(Name=WeaponUtilityState,StateCommand=DrawReload,Action=eActionType_PressRightAnalog,bListenToFirstOnly=true)

// [EchelonPlayer.SPStopOnGap] -LeftAnalog-
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)
m_Action=(Event=StackedDrop,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPStopOnGap] -X-
m_Action=(Name=UseStickyCamState,StateCommand=Normal,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=CoverThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=ThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=UsePortableEMPState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=UseMineDetonatorState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)

// [EchelonPlayer.SPStopOnGap] -Y-
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOn, Action=eActionType_PressY, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopDualExecutionState, StateCommand=Confirm, Action=eActionType_PressY, Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(Name=OrderExecutionState,	Action=eActionType_PressY, Filter=epfCritical)
m_Action=(GameMode=eGameMode_SPOnly, Event=MAERealOff, Action=eActionType_ReleaseY, Filter=epfCritical)

// [EchelonPlayer.SPStopOnGap] -B-
// scripted scenes require PrepareAttackState PreInterrogateState PreInterrogateFailedState ExoticInterrogationState to be eActionType_PressB
m_Action=(Name=StopOnGapDeathFromAboveState,Action=eActionType_PressX,StateCommand=DirectionalTarget,TargetType=TTYPE_None )
m_Action=(Name=PrepareAttackState,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=PrepareAttackState,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(GameMode=eGameMode_MPOnly, Name=CoopReviveState, Action=eActionType_PressB, TargetType=TTYPE_Player)
m_Action=(GameMode=eGameMode_MPOnly, Event=StopRevive, Action=eActionType_ReleaseB, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(Name=StopOnGapDeathFromAboveState,Action=eActionType_PressX,TargetType=TTYPE_None )

// [EchelonPlayer.SPStopOnGap] -B-
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=StackedDrop,Action=eActionType_PressB,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPStopOnGap] -RightShoulder-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_HoldRightShoulder,bListenToFirstOnly=true)
// single-only
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_PressRightShoulder,								Filter=epfCritical, TargetType=TTYPE_None)
m_Action=(GameMode=eGameMode_SPOnly, Name=MarkTargetState, Action=eActionType_ReleaseRightShoulder,	StateCommand=ReleaseMark,	Filter=epfCritical, TargetType=TTYPE_None)
// multi-only
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,										Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical)
m_Action=(GameMode=eGameMode_MPOnly, Name=MarkTargetState,		StateCommand=ReleaseMark,		Action=eActionType_ReleaseRightShoulder, PrecedingAction=eActionType_PressRightShoulder, fMaxDelay=0.499, Filter=epfCritical)

// [EchelonPlayer.SPStopOnGap] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPStopOnGap] -DPadLeft-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleLeft,Action=eActionType_PressDPadLeft, TargetType=TTYPE_None, Filter=epfCritical)
m_Action=(Event=EndCycleInventoryLeftEvent,Action=eActionType_ReleaseDPadLeft, TargetType=TTYPE_None, Filter=epfCritical)

// [EchelonPlayer.SPStopOnGap] -DPadRight-
m_Action=(Name=InventoryUtilityState,StateCommand=CycleRight,Action=eActionType_PressDPadRight, Filter=epfCritical)
m_Action=(Event=EndCycleInventoryRightEvent,Action=eActionType_ReleaseDPadRight, Filter=epfCritical)

// [EchelonPlayer.SPStopOnGap] -DPadDown-
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPStopOnGap] -DPadUp-
m_Action=(Name=UseSonarGogglesState, StateCommand=Normal,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState, StateCommand=ForceOff,	Action=eActionType_PressDPadUp,	Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPStopOnGap] -Tick-
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=UseSonarGogglesState,StateCommand=Tick,Action=eActionType_Tick,iTickFrame=4, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Drop,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=ExecuteActionState,Action=eActionType_Tick,Filter=epfExecute, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Restore,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=AutoReloadTimer,Action=eActionType_Tick, iTickFrame=4, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPStopOnGap] -Right trigger
m_Action=(Event=ForceShoot,Action=eActionType_PressRightTrigger, Filter=epfCritical )
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=EmptyOnly,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPStopOnGap] -Movement-
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPStopOnGap] -Back-
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPStopOnGap] -PC Specific BEGIN-
m_Action=(Event=ReleaseAllMarks,Action=eActionType_PressUnmarkAll,bListenToFirstOnly=true)

m_Action=(Name=WeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Holster,Action=eActionType_HoldAlternateWeapon, TargetType=TTYPE_None)

m_Action=(Name=InventoryUtilityState,StateCommand=SelectFragGrenade,Action=eActionType_PressFragGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectFlashBang,Action=eActionType_PressFlashBang, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectEMPGrenade,Action=eActionType_PressEMPGrenade, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteMine,Action=eActionType_PressRemoteMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectStickyCam,Action=eActionType_PressStickyCam, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectPortableEMP,Action=eActionType_PressPortableEMP, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectProximityMine,Action=eActionType_PressProximityMine, Filter=epfCritical)
m_Action=(Name=InventoryUtilityState,StateCommand=SelectRemoteDetonator,Action=eActionType_PressRemoteDetonator, Filter=epfCritical)
// [EchelonPlayer.SPStopOnGap] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							COSTE NORMAL
//
//----------------------------------------------------------------------------------
//  Normal action scheme for the single player maps
[EchelonPlayer.SPCosteNormalAction]

// [EchelonPlayer.SPCosteNormalAction] -A-
m_Action=(Name=CoverToCoverMkIIState,Action=eActionType_PressA,TargetType=TTYPE_None)
m_Action=(Name=AreaPortalMoveState,Action=eActionType_PressA,TargetType=TTYPE_Portal)
m_Action=(Name=Geo1uJumpState,Action=eActionType_PressA,TargetType=TTYPE_JumpOver)
m_Action=(Name=GenericJumpState,Action=eActionType_PressA,TargetType=TTYPE_None)

// [EchelonPlayer.SPCosteNormalAction] -X-
// scripted scenes require PrepareAttackState PreInterrogateState PreInterrogateFailedState ExoticInterrogationState to be eActionType_PressB
m_Action=(Name=AttackDoorState,StateCommand=DirectionalTarget,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=PrepareAttackState,StateCommand=NoGrab,Action=eActionType_PressX,TargetType=TTYPE_Enemy)
m_Action=(Name=PrepareAttackState,StateCommand=NoGrab,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=AttackDoorState,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=StartCarAlarmState,Action=eActionType_PressX, TargetType=TTYPE_Car )

// [EchelonPlayer.SPCosteNormalAction] -LeftShoulder-
m_Action=(Name=CoverThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)
m_Action=(Name=ThrowGrenadeState,Action=eActionType_ReleaseLeftShoulder,TargetType=TTYPE_None)

// [EchelonPlayer.SPCosteNormalAction] -Y-

// [EchelonPlayer.SPCosteNormalAction] -RightAnalog-
m_Action=(Name=ReloadFireWeaponState,Action=eActionType_PressRightAnalog)
m_Action=(Name=WeaponUtilityState,StateCommand=DrawReload,Action=eActionType_PressRightAnalog)

// [EchelonPlayer.SPCosteNormalAction] -LeftAnalog-
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)
m_Action=(Name=SlideOnGroundState,StateCommand=Crouch,Action=eActionType_PressLeftAnalog, TargetType=TTYPE_None )

// [EchelonPlayer.SPCosteNormalAction] -RightShoulder-

// [EchelonPlayer.SPCosteNormalAction] -B-
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical)
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical)
m_Action=(Name=CoverNavStartState,StateCommand=InstantCheck,Action=eActionType_PressB, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_HoldB, TargetType=TTYPE_None )
m_Action=(Name=SlideOnGroundState,Action=eActionType_PressB, TargetType=TTYPE_None )
m_Action=(Name=RollState,Action=eActionType_HoldB,TargetType=TTYPE_None)

// [EchelonPlayer.SPCosteNormalAction] -Visual Interaction-
m_Action=(Name=CustomInteractionState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=ExternalInventoryState,Action=eActionType_VisualInteraction, TargetType=TTYPE_None )
m_Action=(Name=UseDoorState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseDoorState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseWindowState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseWindowState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay )
m_Action=(Name=UseSwitchState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=PickUpState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Inventoriable )

// [EchelonPlayer.SPCosteNormalAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPCosteNormalAction] -DPadLeft-

// [EchelonPlayer.SPCosteNormalAction] -DPadRight-

// [EchelonPlayer.SPCosteNormalAction] -DPadDown-
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPCosteNormalAction] -DPadUp-


// [EchelonPlayer.SPCosteNormalAction] -Tick-
m_Action=(Name=GeoLowDropState,Action=eActionType_Tick, TargetType=TTYPE_JumpOver )
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=InstantAttachState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Drop,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=GenericFallState,StateCommand=AutoDetect,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical )
m_Action=(Name=WeaponUtilityState,StateCommand=Restore,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=IdleLayerState,Action=eActionType_Tick,iTickFrame=10, TargetType=TTYPE_None )
//m_Action=(Name=StopOnGapState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=AutoReloadTimer,Action=eActionType_Tick, iTickFrame=4, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPCosteNormalAction] -Movement-
m_Action=(Name=CoverNavState,Action=eActionType_Movement, TargetType=TTYPE_None )
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPCosteNormalAction] -Right trigger
m_Action=(Event=ForceShoot,Action=eActionType_PressRightTrigger, Filter=epfCritical )
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=EmptyOnly,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPCosteNormalAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPCosteNormalAction] -PC Specific BEGIN-
m_Action=(Name=WeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
// [EchelonPlayer.SPCosteNormalAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							COSTE CROUCH
//
//----------------------------------------------------------------------------------

[EchelonPlayer.SPCosteCrouchAction]

// [EchelonPlayer.SPCosteCrouchAction] -A-
m_Action=(Name=CoverToCoverMkIIState,Action=eActionType_PressA,TargetType=TTYPE_None)
m_Action=(Name=Geo1uJumpState,Action=eActionType_PressA,TargetType=TTYPE_JumpOver)

// [EchelonPlayer.SPCosteCrouchAction] -X-
// scripted scenes require PrepareAttackState PreInterrogateState PreInterrogateFailedState ExoticInterrogationState to be eActionType_PressB
m_Action=(Name=AttackDoorState,StateCommand=DirectionalTarget,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=PrepareAttackState,StateCommand=NoGrab,Action=eActionType_PressX, TargetType=TTYPE_Enemy)
m_Action=(Name=PrepareAttackState,StateCommand=NoGrab,Action=eActionType_PressB,TargetType=TTYPE_Enemy)
m_Action=(Name=AttackDoorState,Action=eActionType_PressX,TargetType=TTYPE_EntryWay)
m_Action=(Name=StartCarAlarmState,Action=eActionType_PressX, TargetType=TTYPE_Car )

// [EchelonPlayer.SPCosteCrouchAction] -Visual Interaction-
m_Action=(Name=CustomInteractionState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch )
m_Action=(Name=ExternalInventoryState,Action=eActionType_VisualInteraction, TargetType=TTYPE_None)
m_Action=(Name=UseDoorState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseDoorState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseWindowState,StateCommand=Open,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseWindowState,StateCommand=Close,Action=eActionType_VisualInteraction, TargetType=TTYPE_EntryWay)
m_Action=(Name=UseSwitchState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Switch)
m_Action=(Name=PickUpState,Action=eActionType_VisualInteraction, TargetType=TTYPE_Inventoriable)

// [EchelonPlayer.SPCosteCrouchAction] -RightAnalog-
m_Action=(Name=ReloadFireWeaponState,Action=eActionType_PressRightAnalog)
m_Action=(Name=WeaponUtilityState,StateCommand=DrawReload,Action=eActionType_PressRightAnalog)

// [EchelonPlayer.SPCosteCrouchAction] -LeftAnalog-
m_Action=(Event=ToggleCrouch,Action=eActionType_PressLeftAnalog,Filter=epfCritical)

// [EchelonPlayer.SPCosteCrouchAction] -X-
m_Action=(Name=ThrowGrenadeState,Action=eActionType_ReleaseX,TargetType=TTYPE_None)

// [EchelonPlayer.SPCosteCrouchAction] -Y-

// [EchelonPlayer.SPCosteCrouchAction] -B- 
m_Action=(Event=DetectB2W,Action=eActionType_PressB,Filter=epfCritical)
m_Action=(Event=StopDetectB2W,Action=eActionType_ReleaseB,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,StateCommand=InstantCheck,Action=eActionType_PressB, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_HoldB, TargetType=TTYPE_None )
m_Action=(Name=RollState,Action=eActionType_HoldB,TargetType=TTYPE_None)

// [EchelonPlayer.SPCosteCrouchAction] -DPadLeft-

// [EchelonPlayer.SPCosteCrouchAction] -DPadRight-

// [EchelonPlayer.SPCosteCrouchAction] -DPadDown-
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressDPadDown, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=Cycle,Action=eActionType_ReleaseDPadDown, PrecedingAction=eActionType_PressDPadDown,fMaxDelay=0.499, TargetType=TTYPE_None)

// [EchelonPlayer.SPCosteCrouchAction] -DPadUp-

// [EchelonPlayer.SPCosteCrouchAction] -LeftTrigger-
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_PressLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOn,Action=eActionType_HoldLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Event=TogglePrecisionModeOff,Action=eActionType_ReleaseLeftTrigger,Filter=epfCritical, TargetType=TTYPE_None )

// [EchelonPlayer.SPCosteCrouchAction] -Tick-
m_Action=(Name=GeoLowDropState,Action=eActionType_Tick, TargetType=TTYPE_JumpOver )
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Drop,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=GenericFallState,StateCommand=AutoDetect,Action=eActionType_Tick,iTickFrame=2, TargetType=TTYPE_None )
m_Action=(Name=AutoPickUpState,Action=eActionType_Tick,iTickFrame=3, TargetType=TTYPE_Inventoriable,Filter=epfCritical )
m_Action=(Name=WeaponUtilityState,StateCommand=Restore,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=CoverNavStartState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=IdleLayerState,Action=eActionType_Tick,iTickFrame=10, TargetType=TTYPE_None )
//m_Action=(Name=StopOnGapState,Action=eActionType_Tick, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=AutoReloadTimer,Action=eActionType_Tick, iTickFrame=4, TargetType=TTYPE_None ) 

// [EchelonPlayer.SPCosteCrouchAction] -Movement-
m_Action=(Name=MovementState,Action=eActionType_Movement, TargetType=TTYPE_None )

// [EchelonPlayer.SPCosteCrouchAction] -Right trigger
m_Action=(Event=ForceShoot,Action=eActionType_PressRightTrigger, Filter=epfCritical )
m_Action=(Name=WeaponUtilityState,StateCommand=Equip,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )
m_Action=(Name=ReloadFireWeaponState,StateCommand=EmptyOnly,Action=eActionType_PressRightTrigger, TargetType=TTYPE_None )

// [EchelonPlayer.SPCosteCrouchAction] -RightShoulder-


// [EchelonPlayer.SPCosteCrouchAction] -Back-
m_Action=(Event=EnableSamThoughts,Action=eActionType_PressBack,Filter=epfCritical)
m_Action=(Event=DisableSamThoughts,Action=eActionType_ReleaseBack,Filter=epfCritical)
//m_Action=(Event=GodModeToggle,Action=eActionType_PressBack)

// [EchelonPlayer.SPCosteCrouchAction] -PC Specific BEGIN-
m_Action=(Event=CrouchOff,Action=eActionType_PressRun,Filter=epfCritical)

m_Action=(Name=WeaponUtilityState,StateCommand=EquipPrimary,Action=eActionType_PressPrimaryWeapon, TargetType=TTYPE_None)
m_Action=(Name=WeaponUtilityState,StateCommand=EquipAlternate,Action=eActionType_PressAlternateWeapon, TargetType=TTYPE_None)
// [EchelonPlayer.SPCosteCrouchAction] -PC Specific END-

//----------------------------------------------------------------------------------
//
//							GUNPOINT ACTION (GRIMM WALK)
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPGunpointAction]


//----------------------------------------------------------------------------------
//
//							CustomInteractionAction ACTION
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPCustomInteractionAction]
m_Action=(Event=CustomInteractionInterrupted,Action=eActionType_PressB,eEventTipID=EBUTTON_ACTION_CANCEL_ACTION,Filter=epfCritical)
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )

//----------------------------------------------------------------------------------
//
//							SPSeqControlledAction
//
//----------------------------------------------------------------------------------
[EchelonPlayer.SPSeqControlledAction]
m_Action=(Event=InterruptInteraction,Action=eActionType_PressB,eEventTipID=EBUTTON_ACTION_CANCEL_ACTION,Filter=epfCritical)
m_Action=(Name=CrashOnGroundState,Action=eActionType_Tick,Filter=epfCritical, TargetType=TTYPE_None )
